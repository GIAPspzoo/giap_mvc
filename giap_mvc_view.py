# -*- coding: utf-8 -*-
"""
/***************************************************************************
 GiapMVCDialog
                                 A QGIS plugin
 przyk≈Çadowy mvc dla GIAP-SPDP
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2019-11-21
        git sha              : $Format:%H$
        copyright            : (C) 2019 by Sylwester Czarnecki
        email                : scz@giap.pl
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from PyQt5 import QtCore, QtWidgets, uic

# This loads your .ui file so that PyQt can populate your plugin
# with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'giap_mvc_view_base.ui'))


class GiapMVCView(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, giap_mvc, parent=None):
        super(GiapMVCView, self).__init__(parent)
        self.setupUi(self)
        self.giap_mvc = giap_mvc
        self.setWindowFlags(QtCore.Qt.Window)
        self.reset_view()
        self.add_btn.clicked.connect(self.giap_mvc.add_record)
        self.edit_btn.clicked.connect(self.giap_mvc.edit_record)
        self.del_btn.clicked.connect(self.giap_mvc.del_record)

    def hide_columns(self, columns_count, shown_columns):
        """

        :param columns_count:
        :param shown_columns:
        """
        for column in range(columns_count):
            if column not in shown_columns:
                self.tableView.hideColumn(column)

    def reset_view(self):
        self.tableView.setModel(self.giap_mvc.road_model)
